{"version":3,"file":"ThemeProvider.js","sourceRoot":"","sources":["../../src/ThemeProvider.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAsBzD,MAAM,YAAY,GAAG,aAAa,CAA+B,SAAS,CAAC,CAAC;AAE5E,MAAM,UAAU,aAAa,CAAC,EAAE,QAAQ,EAAiC;IACvE,MAAM,KAAK,GAAG;QACZ,MAAM,EAAE;YACN,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,SAAS;SAClB;QACD,UAAU,EAAE;YACV,UAAU,EAAE,mBAAmB;YAC/B,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,GAAG;SAChB;QACD,OAAO,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;KACF,CAAC;IAEF,OAAO,CACL,MAAC,YAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE,aACrC,gBAAO,GAAG,QAAC,MAAM,kBAAE;;;2BAGE,KAAK,CAAC,MAAM,CAAC,OAAO;6BAClB,KAAK,CAAC,MAAM,CAAC,SAAS;2BACxB,KAAK,CAAC,MAAM,CAAC,OAAO;2BACpB,KAAK,CAAC,MAAM,CAAC,OAAO;0BACrB,KAAK,CAAC,MAAM,CAAC,MAAM;;;+BAGd,KAAK,CAAC,UAAU,CAAC,UAAU;kCACxB,KAAK,CAAC,UAAU,CAAC,QAAQ;+BAC5B,KAAK,CAAC,UAAU,CAAC,UAAU;;;8BAG5B,KAAK,CAAC,OAAO,CAAC,IAAI;;OAEzC,GAAS,EACT,QAAQ,IACa,CACzB,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,QAAQ;IACtB,MAAM,OAAO,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;IACzC,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;IAClE,CAAC;IACD,OAAO,OAAO,CAAC,KAAK,CAAC;AACvB,CAAC","sourcesContent":["import React, { createContext, useContext } from 'react';\n\ninterface ThemeContextType {\n  theme: {\n    colors: {\n      primary: string;\n      secondary: string;\n      success: string;\n      warning: string;\n      danger: string;\n    };\n    typography: {\n      fontFamily: string;\n      fontSize: string;\n      lineHeight: number;\n    };\n    spacing: {\n      unit: string;\n    };\n  };\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const theme = {\n    colors: {\n      primary: '#0070f3',\n      secondary: '#667085',\n      success: '#10b981',\n      warning: '#f59e0b',\n      danger: '#ef4444',\n    },\n    typography: {\n      fontFamily: 'Inter, sans-serif',\n      fontSize: '1rem',\n      lineHeight: 1.5,\n    },\n    spacing: {\n      unit: '0.25rem',\n    },\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme }}>\n      <style jsx global>{`\n        :root {\n          /* Colors */\n          --zui-primary: ${theme.colors.primary};\n          --zui-secondary: ${theme.colors.secondary};\n          --zui-success: ${theme.colors.success};\n          --zui-warning: ${theme.colors.warning};\n          --zui-danger: ${theme.colors.danger};\n\n          /* Typography */\n          --zui-font-family: ${theme.typography.fontFamily};\n          --zui-font-size-base: ${theme.typography.fontSize};\n          --zui-line-height: ${theme.typography.lineHeight};\n\n          /* Spacing */\n          --zui-space-unit: ${theme.spacing.unit};\n        }\n      `}</style>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context.theme;\n}\n"]}